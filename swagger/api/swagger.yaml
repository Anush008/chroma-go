openapi: 3.0.0
info:
  title: FastAPI
  version: 0.1.0
servers:
- url: http://localhost:8000
  description: Local server
paths:
  /api/v1:
    get:
      summary: Root
      operationId: root
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Root Api V1 Get
                type: object
                additionalProperties:
                  type: integer
                x-content-type: application/json
  /api/v1/reset:
    post:
      summary: Reset
      operationId: reset
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Reset Api V1 Reset Post
                type: boolean
                x-content-type: application/json
  /api/v1/version:
    get:
      summary: Version
      operationId: version
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Version Api V1 Version Get
                type: string
                x-content-type: application/json
  /api/v1/heartbeat:
    get:
      summary: Heartbeat
      operationId: heartbeat
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Heartbeat Api V1 Heartbeat Get
                type: object
                additionalProperties:
                  type: number
                x-content-type: application/json
  /api/v1/raw_sql:
    post:
      summary: Raw Sql
      operationId: raw_sql
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RawSql'
        required: true
      responses:
        "200":
          description: Successful Response
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections:
    get:
      summary: List Collections
      operationId: list_collections
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'
                x-content-type: application/json
    post:
      summary: Create Collection
      operationId: create_collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCollection'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCollectionResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}/add:
    post:
      summary: Add
      operationId: add
      parameters:
      - name: collection_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          title: Collection Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEmbedding'
        required: true
      responses:
        "201":
          description: Successful Response
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}/update:
    post:
      summary: Update
      operationId: update
      parameters:
      - name: collection_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          title: Collection Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmbedding'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}/upsert:
    post:
      summary: Upsert
      operationId: upsert
      parameters:
      - name: collection_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          title: Collection Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEmbedding'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}/get:
    post:
      summary: Get
      operationId: get
      parameters:
      - name: collection_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          title: Collection Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEmbedding'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionData'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}/delete:
    post:
      summary: Delete
      operationId: delete
      parameters:
      - name: collection_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          title: Collection Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEmbedding'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmbeddingResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}/count:
    get:
      summary: Count
      operationId: count
      parameters:
      - name: collection_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          title: Collection Id
          type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: integer
                x-content-type: application/json
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}/query:
    post:
      summary: Get Nearest Neighbors
      operationId: get_nearest_neighbors
      parameters:
      - name: collection_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          title: Collection Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryEmbedding'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_name}/create_index:
    post:
      summary: Create Index
      operationId: create_index
      parameters:
      - name: collection_name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          title: Collection Name
          type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_name}:
    get:
      summary: Get Collection
      operationId: get_collection
      parameters:
      - name: collection_name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          title: Collection Name
          type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      summary: Delete Collection
      operationId: delete_collection
      parameters:
      - name: collection_name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          title: Collection Name
          type: string
      responses:
        "200":
          description: Successful Response
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}:
    put:
      summary: Update Collection
      operationId: update_collection
      parameters:
      - name: collection_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          title: Collection Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCollection'
        required: true
      responses:
        "200":
          description: Successful Response
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AddEmbedding:
      title: AddEmbedding
      required:
      - ids
      type: object
      properties:
        embeddings:
          title: Embeddings
          type: array
          items:
            type: array
            items:
              type: number
              format: float
        metadatas:
          title: Metadatas
          type: array
          items:
            type: object
            additionalProperties:
              type: string
        documents:
          title: Documents
          type: array
          items:
            type: string
        ids:
          title: Ids
          type: array
          items:
            type: string
        increment_index:
          title: Increment Index
          type: boolean
          default: true
    CreateCollection:
      title: CreateCollection
      required:
      - name
      type: object
      properties:
        name:
          title: Name
          type: string
        metadata:
          title: Metadata
          type: object
          additionalProperties:
            type: string
        get_or_create:
          title: Get Or Create
          type: boolean
          default: false
    CreateCollectionResponse:
      title: CreateCollectionResponse
      type: object
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        metadata:
          $ref: '#/components/schemas/MetadataSimple'
      example:
        metadata:
          key: metadata
        name: name
        id: id
    MetadataSimple:
      title: MetadataSimple
      type: object
      additionalProperties:
        type: string
      x-schema-name: MetadataSimple
    DeleteEmbedding:
      title: DeleteEmbedding
      type: object
      properties:
        ids:
          title: Ids
          type: array
          items:
            type: string
        where:
          title: Where
          type: object
        where_document:
          title: Where Document
          type: object
    DeleteEmbeddingResponse:
      title: DeleteEmbeddingResponse
      type: array
      items:
        type: string
      x-schema-name: DeleteEmbeddingResponse
    GetEmbedding:
      title: GetEmbedding
      type: object
      properties:
        ids:
          title: Ids
          type: array
          items:
            type: string
        where:
          title: Where
          type: object
          additionalProperties:
            type: string
        where_document:
          title: Where Document
          type: object
          additionalProperties:
            type: string
        sort:
          title: Sort
          type: string
        limit:
          title: Limit
          type: integer
        offset:
          title: Offset
          type: integer
        include:
          title: Include
          type: array
          items:
            anyOf:
            - type: string
              enum:
              - documents
            - type: string
              enum:
              - embeddings
            - type: string
              enum:
              - metadatas
            - type: string
              enum:
              - distances
          default:
          - metadatas
          - documents
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    QueryEmbedding:
      title: QueryEmbedding
      required:
      - query_embeddings
      type: object
      properties:
        where:
          title: Where
          type: object
          additionalProperties:
            type: string
          default: {}
        where_document:
          title: Where Document
          type: object
          additionalProperties:
            type: string
          default: {}
        query_embeddings:
          title: Query Embeddings
          type: array
          items:
            type: array
            items:
              type: number
              format: float
        n_results:
          title: N Results
          type: integer
          default: 10
        include:
          title: Include
          type: array
          items:
            type: string
            enum:
            - documents
            - embeddings
            - metadatas
            - distances
          default:
          - metadatas
          - documents
          - distances
    RawSql:
      title: RawSql
      required:
      - raw_sql
      type: object
      properties:
        raw_sql:
          title: Raw Sql
          type: string
    UpdateCollection:
      title: UpdateCollection
      type: object
      properties:
        new_name:
          title: New Name
          type: string
        new_metadata:
          title: New Metadata
          type: object
          additionalProperties:
            type: string
    UpdateEmbedding:
      title: UpdateEmbedding
      required:
      - ids
      type: object
      properties:
        embeddings:
          title: Embeddings
          type: array
          items:
            type: array
            items:
              type: number
              format: float
        metadatas:
          title: Metadatas
          type: array
          items:
            type: object
        documents:
          title: Documents
          type: array
          items:
            type: string
        ids:
          title: Ids
          type: array
          items:
            type: string
        increment_index:
          title: Increment Index
          type: boolean
          default: true
    ValidationError:
      title: ValidationError
      required:
      - loc
      - msg
      - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
            - type: string
            - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    CollectionData:
      title: CollectionData
      type: object
      properties:
        ids:
          title: Ids
          type: array
          items:
            type: string
        documents:
          title: Documents
          type: array
          items:
            type: string
        metadatas:
          title: Metadatas
          type: array
          items:
            type: object
            additionalProperties:
              type: string
      example:
        documents:
        - documents
        - documents
        metadatas:
        - key: metadatas
        - key: metadatas
        ids:
        - ids
        - ids
    QueryResult:
      title: QueryResult
      type: object
      properties:
        documents:
          title: Documents
          type: array
          items:
            type: array
            items:
              type: string
        ids:
          title: Ids
          type: array
          items:
            type: array
            items:
              type: string
        metadatas:
          title: Metadatas
          type: array
          items:
            type: array
            items:
              type: object
              additionalProperties:
                type: string
        distances:
          title: Distances
          type: array
          items:
            type: array
            items:
              type: number
              format: float
      example:
        distances:
        - - 0.8008282
          - 0.8008282
        - - 0.8008282
          - 0.8008282
        documents:
        - - documents
          - documents
        - - documents
          - documents
        metadatas:
        - - key: metadatas
          - key: metadatas
        - - key: metadatas
          - key: metadatas
        ids:
        - - ids
          - ids
        - - ids
          - ids
    Collection:
      title: Collection
      type: object
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        metadata:
          $ref: '#/components/schemas/MetadataSimple'
      example:
        metadata:
          key: metadata
        name: name
        id: id
